{
    "name": "prettify-symbols-mode",
    "displayName": "Prettify Symbols Mode",
    "description": "Displays identifiers & symbols using more aesthetically pleasing symbols.",
    "version": "0.1.6",
    "publisher": "siegebell",
    "license": "MIT license (MIT)",
    "engines": {
        "vscode": "^1.3.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "*"
    ],
    "main": "./out/src/extension",
    "contributes": {
        "commands": [
            {
                "command": "extension.enablePrettySymbols",
                "title": "Enable prettify symbols mode"
            },
            {
                "command": "extension.disablePrettySymbols",
                "title": "Disable prettify symbols mode"
            },
            {
                "command": "extension.togglePrettySymbols",
                "title": "Toggle prettify symbols mode"
            },
            {
                "command": "extension.enablePrettyCursor",
                "title": "Enable cursor adjustments in prettify symbols mode"
            },
            {
                "command": "extension.disablePrettyCursor",
                "title": "Disable cursor adjustments in prettify symbols mode"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Prettify symbols mode",
            "properties": {
                "prettifySymbolsMode.revealOn": {
                    "enum": ["cursor", "cursor-inside", "active-line", "selection", "none"],
                    "description": "When to reveal the original text. Options are -- 'cursor': reveal when a cursor contacts a symbol; 'cursor-inside': reveal when a cursor is inside a symbol; 'active-line': reveal all symbols on the same line as a cursor; 'selection': reveal all symbols that are selected or contact a cursor; 'none': do not reveal.",
                    "default": "cursor"
                },
                "prettifySymbolsMode.substitutions": {
                    "type": "array",
                    "description": "A list of substitution settings can be specified for each language.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "language": {
                                "description": "A pattern, or list of patterns, to specify which languages to apply these substitutions on.",
                                "anyOf": [
                                    {
                                        "type": "array",
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "type": "string",
                                                    "description": "A language-id (e.g. 'plaintext' or 'fsharp')"
                                                },
                                                {
                                                    "type": "object",
                                                    "description": "A complex filter",
                                                    "properties": {
                                                        "language": {
                                                            "type": "string",
                                                            "description": "A language-id (e.g. 'plaintext' or 'fsharp')"
                                                        },
                                                        "pattern": {
                                                            "type": "string",
                                                            "description": "glob pattern"
                                                        },
                                                        "scheme": {
                                                            "type": "string",
                                                            "description": "e.g. 'https' or 'file'"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "string",
                                        "description": "A language-id (e.g. 'plaintext' or 'fsharp')"
                                    },
                                    {
                                        "type": "object",
                                        "description": "A complex filter",
                                        "properties": {
                                            "language": {
                                                "type": "string",
                                                "description": "A language-id (e.g. 'plaintext' or 'fsharp')"
                                            },
                                            "pattern": {
                                                "type": "string",
                                                "description": "glob pattern"
                                            },
                                            "scheme": {
                                                "type": "string",
                                                "description": "e.g. 'https' or 'file'"
                                            }
                                        }
                                    }
                                ],
                                "default": [
                                    "coq",
                                    {
                                        "pattern": "**/*.v"
                                    }
                                ]
                            },
                            "revealOn": {
                                "enum": ["cursor", "cursor-inside", "active-line", "selection", "none"],
                                "description": "When to reveal the original text. Options are -- 'cursor': reveal when a cursor contacts a symbol; 'cursor-inside': reveal when a cursor is inside a symbol; 'active-line': reveal all symbols on the same line as a cursor; 'selection': reveal all symbols that are selected or contact a cursor; 'none': do not reveal.",
                                "default": "cursor"
                            },                            
                            "substitutions": {
                                "type": "array",
                                "description": "A list of substitutions",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "ugly": {
                                            "type": "string",
                                            "default": "\\b(Qed.)",
                                            "description": "A Javascript regular expression to specify the 'ugly' string to be replaced. For example, '\\\\\\b' matches a word boundary. Remember to escape your strings!! Writing '\\b' instead of '\\\\\\b' will denote a backspace instead of a word boundary. To match a literal backslash, you must write '\\\\\\\\\\\\\\' because it will be escaped by both JSON and Javascript's RegExp library. You may use non-matching groups, i.e. '(?:...)', but using matching groups, i.e. '(...)', will break substitutions."
                                        },
                                        "pretty": {
                                            "type": "string",
                                            "default": "∎",
                                            "description": "The text to replace an 'ugly' string with. You may use fancy unicode symbols and multiple characters."
                                        },
                                        "pre": {
                                            "type": "string",
                                            "description": "If specified, the text before the 'ugly' text must match this pattern. E.g. '\\\\\\b'"
                                        },
                                        "post": {
                                            "type": "string",
                                            "description": "If specified, the text following the 'ugly' text must match this pattern. E.g. '\\\\\\b'"
                                        }
                                    },
                                    "required": [
                                        "ugly",
                                        "pretty"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "language",
                            "substitutions"
                        ]
                    },
                    "default": [
                        {
                            "language": [
                                "coq",
                                {
                                    "pattern": "**/*.v"
                                }
                            ],
                            "substitutions": [
                                {
                                    "pre": "\\b",
                                    "ugly": "forall",
                                    "post": "\\b",
                                    "pretty": "∀"
                                },
                                {
                                    "pre": "\\b",
                                    "ugly": "exists",
                                    "post": "\\b",
                                    "pretty": "∃"
                                },
                                {
                                    "pre": "\\b",
                                    "ugly": "fun",
                                    "post": "\\b",
                                    "pretty": "λ"
                                },
                                {
                                    "pre": "\\b",
                                    "ugly": "False",
                                    "post": "\\b",
                                    "pretty": "⊥"
                                },
                                {
                                    "pre": "\\b",
                                    "ugly": "True",
                                    "post": "\\b",
                                    "pretty": "⊤"
                                },
                                {
                                    "pre": "\\b",
                                    "ugly": "Defined[.]",
                                    "post": "(?:$|\\s)",
                                    "pretty": "□"
                                },
                                {
                                    "pre": "\\b",
                                    "ugly": "Admitted[.]",
                                    "post": "(?:$|\\s)",
                                    "pretty": "😱"
                                },
                                {
                                    "pre": "\\b",
                                    "ugly": "Proof[.]",
                                    "post": "(?:$|\\s)",
                                    "pretty": "∵"
                                },
                                {
                                    "pre": "\\b",
                                    "ugly": "Qed[.]",
                                    "post": "(?:$|\\s)",
                                    "pretty": "∎"
                                },
                                {
                                    "ugly": "/\\\\",
                                    "pretty": "∧"
                                },
                                {
                                    "ugly": "\\\\/",
                                    "pretty": "∨"
                                },
                                {
                                    "ugly": "=>",
                                    "pretty": "⇒"
                                },
                                {
                                    "ugly": ":=",
                                    "pretty": "≜"
                                },
                                {
                                    "ugly": "<->",
                                    "pretty": "⟷"
                                },
                                {
                                    "ugly": "->",
                                    "pretty": "⟶"
                                }
                            ]
                        },
                        {
                            "language": "haskell",
                            "substitutions": [
                                {
                                    "ugly": "\\\\",
                                    "pretty": "λ",
                                    "post": "\\s*(?:\\w|_).*?\\s*->"
                                },
                                {
                                    "ugly": "<-",
                                    "pretty": "←"
                                },
                                {
                                    "ugly": "->",
                                    "pretty": "→"
                                },
                                {
                                    "ugly": "==",
                                    "pretty": "≡"
                                },
                                {
                                    "ugly": "/=",
                                    "pretty": "≢"
                                },
                                {
                                    "ugly": "\\(\\)",
                                    "pretty": "∅"
                                },
                                {
                                    "ugly": "sqrt\\s?",
                                    "pretty": "√",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "&&",
                                    "pretty": "∧"
                                },
                                {
                                    "ugly": "\\|\\|",
                                    "pretty": "∨"
                                },
                                {
                                    "ugly": "not\\s?",
                                    "pretty": "¬",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": ">",
                                    "pretty": ">",
                                    "pre": "[^=<>]|^",
                                    "post": "[^=<>]|$"
                                },
                                {
                                    "ugly": "<",
                                    "pretty": "<",
                                    "pre": "[^=<>]|^",
                                    "post": "[^=<>]|$"
                                },
                                {
                                    "ugly": ">=",
                                    "pretty": "≥",
                                    "pre": "[^=<>]|^",
                                    "post": "[^=<>]|$"
                                },
                                {
                                    "ugly": "<=",
                                    "pretty": "≤",
                                    "pre": "[^=<>]|^",
                                    "post": "[^=<>]|$"
                                },
                                {
                                    "ugly": "alpha",
                                    "pretty": "α",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "beta",
                                    "pretty": "β",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "gamma",
                                    "pretty": "γ",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "delta",
                                    "pretty": "δ",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "''",
                                    "pretty": "″"
                                },
                                {
                                    "ugly": "'",
                                    "pretty": "′"
                                },
                                {
                                    "ugly": "!!",
                                    "pretty": "‼"
                                },
                                {
                                    "ugly": "\\.\\.",
                                    "pretty": "…"
                                }
                            ]
                        },
                        {
                            "language": "ocaml",
                            "substitutions": [
                                {
                                    "ugly": "fun",
                                    "pretty": "λ",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "<-",
                                    "pretty": "←"
                                },
                                {
                                    "ugly": "->",
                                    "pretty": "→"
                                },
                                {
                                    "ugly": "=",
                                    "pretty": "=",
                                    "pre": "[^<>=!]|^",
                                    "post": "[^<>=]|$"
                                },
                                {
                                    "ugly": "==",
                                    "pretty": "≡"
                                },
                                {
                                    "ugly": "!=",
                                    "pretty": "≢"
                                },
                                {
                                    "ugly": "<>",
                                    "pretty": "≠"
                                },
                                {
                                    "ugly": "\\(\\)",
                                    "pretty": "∅"
                                },
                                {
                                    "ugly": "sqrt\\s?",
                                    "pretty": "√",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "&&",
                                    "pretty": "∧"
                                },
                                {
                                    "ugly": "\\|\\|",
                                    "pretty": "∨"
                                },
                                {
                                    "ugly": "not\\s?",
                                    "pretty": "¬",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": ">",
                                    "pretty": ">",
                                    "pre": "[^=<>]|^",
                                    "post": "[^=<>]|$"
                                },
                                {
                                    "ugly": "<",
                                    "pretty": "<",
                                    "pre": "[^=<>]|^",
                                    "post": "[^=<>]|$"
                                },
                                {
                                    "ugly": ">=",
                                    "pretty": "≥",
                                    "pre": "[^=<>]|^",
                                    "post": "[^=<>]|$"
                                },
                                {
                                    "ugly": "<=",
                                    "pretty": "≤",
                                    "pre": "[^=<>]|^",
                                    "post": "[^=<>]|$"
                                },
                                {
                                    "ugly": "alpha",
                                    "pretty": "α",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "beta",
                                    "pretty": "β",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "gamma",
                                    "pretty": "γ",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "delta",
                                    "pretty": "δ",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "''",
                                    "pretty": "″"
                                },
                                {
                                    "ugly": "'",
                                    "pretty": "′"
                                },
                                {
                                    "ugly": "List[.]for_all",
                                    "pretty": "∀",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "List[.]exists",
                                    "pretty": "∃",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "List[.]mem",
                                    "pretty": "∈",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "\\|",
                                    "pretty": "║",
                                    "pre": "^\\s+"
                                }
                            ]
                        },
                        {
                            "language": "fsharp",
                            "substitutions": [
                                {
                                    "ugly": "fun",
                                    "pretty": "λ",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "<-",
                                    "pretty": "←"
                                },
                                {
                                    "ugly": "->",
                                    "pretty": "→"
                                },
                                {
                                    "ugly": "=",
                                    "pretty": "=",
                                    "pre": "[^<>=!]|^",
                                    "post": "[^<>=]|$"
                                },
                                {
                                    "ugly": "==",
                                    "pretty": "≡"
                                },
                                {
                                    "ugly": "!=",
                                    "pretty": "≢"
                                },
                                {
                                    "ugly": "<>",
                                    "pretty": "≠"
                                },
                                {
                                    "ugly": "sqrt\\s?",
                                    "pretty": "√",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "&&",
                                    "pretty": "∧"
                                },
                                {
                                    "ugly": "\\|\\|",
                                    "pretty": "∨"
                                },
                                {
                                    "ugly": "not\\s?",
                                    "pretty": "¬",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": ">",
                                    "pretty": ">",
                                    "pre": "[^=<>]|^",
                                    "post": "[^=<>]|$"
                                },
                                {
                                    "ugly": "<",
                                    "pretty": "<",
                                    "pre": "[^=<>]|^",
                                    "post": "[^=<>]|$"
                                },
                                {
                                    "ugly": ">=",
                                    "pretty": "≥",
                                    "pre": "[^=<>]|^",
                                    "post": "[^=<>]|$"
                                },
                                {
                                    "ugly": "<=",
                                    "pretty": "≤",
                                    "pre": "[^=<>]|^",
                                    "post": "[^=<>]|$"
                                },
                                {
                                    "ugly": "alpha",
                                    "pretty": "α",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "beta",
                                    "pretty": "β",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "gamma",
                                    "pretty": "γ",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "delta",
                                    "pretty": "δ",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "''",
                                    "pretty": "″"
                                },
                                {
                                    "ugly": "'",
                                    "pretty": "′"
                                },
                                {
                                    "ugly": "List[.]forall",
                                    "pretty": "∀",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": "List[.]exists",
                                    "pretty": "∃",
                                    "pre": "\\b",
                                    "post": "\\b"
                                },
                                {
                                    "ugly": ">>",
                                    "pretty": "≫",
                                    "pre": "[^=<>]|^",
                                    "post": "[^=<>]|$"
                                },
                                {
                                    "ugly": "<<",
                                    "pretty": "≪",
                                    "pre": "[^=<>]|^",
                                    "post": "[^=<>]|$"
                                },
                                {
                                    "ugly": "\\|",
                                    "pretty": "║",
                                    "pre": "^\\s+"
                                }
                            ]
                        }
                    ]
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "node ./node_modules/vscode/bin/compile",
        "compile": "node ./node_modules/vscode/bin/compile -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install"
    },
    "devDependencies": {
        "typescript": "^1.6.2",
        "vscode": "^0.11.13"
    },
    "bugs": {
        "url": "https://github.com/siegebell/vsc-prettify-symbols-mode/issues"
    },
    "homepage": "https://github.com/siegebell/vsc-prettify-symbols-mode/blob/master/README.md",
    "repository": {
        "type": "git",
        "url": "https://github.com/siegebell/vsc-prettify-symbols-mode.git"
    }
}